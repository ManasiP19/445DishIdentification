import pandas as pd
import numpy as np
from sklearn.metrics import confusion_matrix
import seaborn as sns
import matplotlib.pyplot as plt

# Step 1: Read the CSV file
csv_file_path = 'tensorflow_info.csv'  # Replace with the actual path to your CSV file
df = pd.read_csv(csv_file_path)

# Step 2: Convert precision, recall, f1 score, and support to create confusion matrix
class_names = df['name'].tolist()
precision = df['precision'].tolist()
recall = df['recall'].tolist()
f1_score = df['f1-score'].tolist()
support = df['support'].tolist()

true_positive = np.array([round(p * s) for p, s in zip(precision, support)])
false_positive = np.array([round((1 - p) * s) for p, s in zip(precision, support)])
false_negative = np.array([round((1 - r) * s) for r, s in zip(recall, support)])
true_negative = np.array([s - tp - fp - fn for tp, fp, fn, s in zip(true_positive, false_positive, false_negative, support)])

conf_matrix = np.array([
    true_positive,
    false_negative,
    false_positive,
    true_negative
]).T.reshape((len(class_names), 2, 2))

# Step 3: Display the confusion matrix with class names for the top N classes
top_n_classes = 100  # You can adjust this value based on your needs
top_classes_indices = np.argsort(support)[-top_n_classes:][::-1]
top_class_names = [class_names[i] for i in top_classes_indices]
top_conf_matrix = conf_matrix[top_classes_indices, :, :].sum(axis=0)

# Step 4: Display the top N classes confusion matrix
plt.figure(figsize=(10, 8))
sns.heatmap(top_conf_matrix, annot=True, fmt='d', cmap='Blues', xticklabels=['Predicted 0', 'Predicted 1'],
            yticklabels=['Actual 0', 'Actual 1'])
plt.title(f'Tensor Flow Confusion Matrix')
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.show()
